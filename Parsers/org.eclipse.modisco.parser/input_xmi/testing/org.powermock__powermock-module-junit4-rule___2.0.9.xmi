<?xml version="1.0" encoding="ASCII"?>
<java:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:java="http://www.eclipse.org/MoDisco/Java/0.2.incubation/java" name="org.powermock__powermock-module-junit4-rule___2.0.9.jar">
  <ownedElements name="org">
    <ownedPackages name="powermock">
      <ownedPackages name="modules">
        <ownedPackages name="junit4">
          <ownedPackages name="rule">
            <ownedElements xsi:type="java:ClassDeclaration" originalClassFile="//@archives.0/@classFiles.0" name="PowerMockRuleTestSuiteChunker">
              <modifier visibility="public"/>
              <bodyDeclarations xsi:type="java:ConstructorDeclaration" originalClassFile="//@archives.0/@classFiles.0" name="PowerMockRuleTestSuiteChunker">
                <modifier visibility="public"/>
                <parameters originalClassFile="//@archives.0/@classFiles.0" name="arg0">
                  <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.2"/>
                </parameters>
                <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
              </bodyDeclarations>
              <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.0" name="shouldExecuteTestForMethod">
                <modifier visibility="public"/>
                <parameters originalClassFile="//@archives.0/@classFiles.0" name="arg0">
                  <type type="//@orphanTypes.10"/>
                </parameters>
                <parameters originalClassFile="//@archives.0/@classFiles.0" name="arg1">
                  <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.3"/>
                </parameters>
                <returnType type="//@orphanTypes.4"/>
              </bodyDeclarations>
              <superClass type="//@orphanTypes.11"/>
            </ownedElements>
            <ownedElements xsi:type="java:ClassDeclaration" originalClassFile="//@archives.0/@classFiles.1" name="PowerMockRule">
              <modifier visibility="public"/>
              <bodyDeclarations xsi:type="java:FieldDeclaration" originalClassFile="//@archives.0/@classFiles.1">
                <modifier visibility="private" static="true"/>
                <type type="//@orphanTypes.10"/>
                <fragments originalClassFile="//@archives.0/@classFiles.1" name="previousTargetClass"/>
              </bodyDeclarations>
              <bodyDeclarations xsi:type="java:FieldDeclaration" originalClassFile="//@archives.0/@classFiles.1">
                <modifier visibility="private" static="true"/>
                <type type="//@orphanTypes.13"/>
                <fragments originalClassFile="//@archives.0/@classFiles.1" name="mockPolicyInitializer"/>
              </bodyDeclarations>
              <bodyDeclarations xsi:type="java:FieldDeclaration" originalClassFile="//@archives.0/@classFiles.1">
                <annotations originalClassFile="//@archives.0/@classFiles.1">
                  <type type="//@orphanTypes.15"/>
                </annotations>
                <modifier visibility="private" static="true"/>
                <type type="//@orphanTypes.14"/>
                <fragments originalClassFile="//@archives.0/@classFiles.1" name="testSuiteChunker"/>
              </bodyDeclarations>
              <bodyDeclarations xsi:type="java:ConstructorDeclaration" originalClassFile="//@archives.0/@classFiles.1" name="PowerMockRule">
                <modifier visibility="public"/>
              </bodyDeclarations>
              <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.1" name="apply">
                <modifier visibility="public"/>
                <parameters originalClassFile="//@archives.0/@classFiles.1" name="arg0">
                  <type type="//@orphanTypes.16"/>
                </parameters>
                <parameters originalClassFile="//@archives.0/@classFiles.1" name="arg1">
                  <type type="//@orphanTypes.17"/>
                </parameters>
                <parameters originalClassFile="//@archives.0/@classFiles.1" name="arg2">
                  <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.3"/>
                </parameters>
                <returnType type="//@orphanTypes.16"/>
              </bodyDeclarations>
              <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.1" name="isNotRuleInitialized">
                <modifier visibility="protected"/>
                <parameters originalClassFile="//@archives.0/@classFiles.1" name="arg0">
                  <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.3"/>
                </parameters>
                <returnType type="//@orphanTypes.4"/>
              </bodyDeclarations>
              <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.1" name="init">
                <modifier visibility="protected"/>
                <parameters originalClassFile="//@archives.0/@classFiles.1" name="arg0">
                  <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.3"/>
                </parameters>
                <returnType type="//@orphanTypes.5"/>
              </bodyDeclarations>
              <superInterfaces type="//@orphanTypes.12"/>
            </ownedElements>
            <ownedElements xsi:type="java:ClassDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="PowerMockStatement">
              <modifier/>
              <bodyDeclarations xsi:type="java:FieldDeclaration" originalClassFile="//@archives.0/@classFiles.2">
                <modifier visibility="private"/>
                <type type="//@orphanTypes.16"/>
                <fragments originalClassFile="//@archives.0/@classFiles.2" name="fNext"/>
              </bodyDeclarations>
              <bodyDeclarations xsi:type="java:FieldDeclaration" originalClassFile="//@archives.0/@classFiles.2">
                <modifier visibility="private"/>
                <type type="//@orphanTypes.18"/>
                <fragments originalClassFile="//@archives.0/@classFiles.2" name="classloaderExecutor"/>
              </bodyDeclarations>
              <bodyDeclarations xsi:type="java:FieldDeclaration" originalClassFile="//@archives.0/@classFiles.2">
                <modifier visibility="private"/>
                <type type="//@orphanTypes.13"/>
                <fragments originalClassFile="//@archives.0/@classFiles.2" name="mockPolicyInitializer"/>
              </bodyDeclarations>
              <bodyDeclarations xsi:type="java:ConstructorDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="PowerMockStatement">
                <modifier visibility="public"/>
                <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg0">
                  <type type="//@orphanTypes.16"/>
                </parameters>
                <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg1">
                  <type type="//@orphanTypes.19"/>
                </parameters>
                <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg2">
                  <type type="//@orphanTypes.13"/>
                </parameters>
              </bodyDeclarations>
              <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="evaluate">
                <modifier visibility="public"/>
                <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
                <returnType type="//@orphanTypes.5"/>
              </bodyDeclarations>
              <superClass type="//@orphanTypes.16"/>
            </ownedElements>
          </ownedPackages>
        </ownedPackages>
      </ownedPackages>
    </ownedPackages>
  </ownedElements>
  <ownedElements name="java" proxy="true">
    <ownedPackages name="lang" proxy="true">
      <ownedElements xsi:type="java:ClassDeclaration" name="Exception" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@thrownExceptions.0">
        <superClass type="//@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" name="Throwable" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedElements.0/@superClass //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.4/@thrownExceptions.0">
        <superInterfaces type="//@ownedElements.1/@ownedPackages.1/@ownedElements.0"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" name="Class" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0/@type //@orphanTypes.10/@type">
        <superInterfaces type="//@ownedElements.1/@ownedPackages.1/@ownedElements.0"/>
        <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
        <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
        <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.1"/>
        <typeParameters name="T" proxy="true"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" name="Object" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.4/@parameters.2/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.5/@parameters.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.6/@parameters.0/@type"/>
      <ownedPackages name="reflect" proxy="true">
        <ownedElements xsi:type="java:InterfaceDeclaration" name="GenericDeclaration" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedElements.2/@superInterfaces.1 //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.4/@superInterfaces.1">
          <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.1"/>
        </ownedElements>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="AnnotatedElement" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@superInterfaces.0 //@ownedElements.1/@ownedPackages.0/@ownedElements.2/@superInterfaces.3 //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5/@superInterfaces.0"/>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="Type" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedElements.2/@superInterfaces.2"/>
        <ownedElements xsi:type="java:ClassDeclaration" name="Method" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.1/@parameters.1/@type">
          <superClass type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.4"/>
        </ownedElements>
        <ownedElements xsi:type="java:ClassDeclaration" name="Executable" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.3/@superClass">
          <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.6"/>
          <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
          <superClass type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5"/>
        </ownedElements>
        <ownedElements xsi:type="java:ClassDeclaration" name="AccessibleObject" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.4/@superClass">
          <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.1"/>
        </ownedElements>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="Member" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.4/@superInterfaces.0"/>
      </ownedPackages>
    </ownedPackages>
    <ownedPackages name="io" proxy="true">
      <ownedElements xsi:type="java:InterfaceDeclaration" name="Serializable" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedElements.1/@superInterfaces.0 //@ownedElements.1/@ownedPackages.0/@ownedElements.2/@superInterfaces.0"/>
    </ownedPackages>
  </ownedElements>
  <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int"/>
  <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
  <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
  <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
  <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.1/@returnType //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.5/@returnType"/>
  <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.6/@returnType //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.4/@returnType"/>
  <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
  <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
  <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
  <orphanTypes xsi:type="java:WildCardType" name="?" usagesInTypeAccess="//@orphanTypes.10/@typeArguments.0"/>
  <orphanTypes xsi:type="java:ParameterizedType" name="java.lang.Class&lt;?>" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.1/@parameters.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.0/@type">
    <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.2"/>
    <typeArguments type="//@orphanTypes.9"/>
  </orphanTypes>
  <orphanTypes xsi:type="java:ClassDeclaration" name="org.powermock.tests.utils.impl.AbstractCommonTestSuiteChunkerImpl" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@superClass"/>
  <orphanTypes xsi:type="java:ClassDeclaration" name="org.junit.rules.MethodRule" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@superInterfaces.0"/>
  <orphanTypes xsi:type="java:ClassDeclaration" name="org.powermock.tests.utils.MockPolicyInitializer" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.1/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.2/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.3/@parameters.2/@type"/>
  <orphanTypes xsi:type="java:ClassDeclaration" name="org.powermock.tests.utils.TestSuiteChunker" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.2/@type"/>
  <orphanTypes xsi:type="java:ClassDeclaration" name="org.powermock.classloading.spi.DoNotClone" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.2/@annotations.0/@type"/>
  <orphanTypes xsi:type="java:ClassDeclaration" name="org.junit.runners.model.Statement" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.4/@returnType //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.4/@parameters.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@superClass //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.3/@parameters.0/@type"/>
  <orphanTypes xsi:type="java:ClassDeclaration" name="org.junit.runners.model.FrameworkMethod" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.4/@parameters.1/@type"/>
  <orphanTypes xsi:type="java:ClassDeclaration" name="org.powermock.classloading.ClassloaderExecutor" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.1/@type"/>
  <orphanTypes xsi:type="java:ClassDeclaration" name="org.powermock.tests.utils.TestChunk" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.3/@parameters.1/@type"/>
  <archives name="org.powermock__powermock-module-junit4-rule___2.0.9.jar" originalFilePath="/Users/juri/PycharmProjects/GithubCollectionParser/CEZAR/jars/org.powermock__powermock-module-junit4-rule___2.0.9.jar">
    <classFiles name="PowerMockRuleTestSuiteChunker.class" originalFilePath="/org/powermock/modules/junit4/rule/PowerMockRuleTestSuiteChunker.class" type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0" package="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0"/>
    <classFiles name="PowerMockRule.class" originalFilePath="/org/powermock/modules/junit4/rule/PowerMockRule.class" type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1" package="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0"/>
    <classFiles name="PowerMockStatement.class" originalFilePath="/org/powermock/modules/junit4/rule/PowerMockStatement.class" type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2" package="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0"/>
    <manifest>
      <mainAttributes key="Implementation-Title" value="powermock-module-junit4-rule"/>
      <mainAttributes key="Implementation-Version" value="2.0.9"/>
      <mainAttributes key="Created-By" value="1.8.0_151 (Oracle Corporation)"/>
      <mainAttributes key="Manifest-Version" value="1.0"/>
    </manifest>
  </archives>
</java:Model>
