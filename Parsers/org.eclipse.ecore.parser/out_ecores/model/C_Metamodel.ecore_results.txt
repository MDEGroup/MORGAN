model	WhileCommand (condition,ConditionalExpression,ref) 
model	ReturnCommand (expression,Expression,ref) 
model	H_Unit (declaration,DeclarationsBlock,ref) 
model	ForCommand (expression,Expression,ref) (inicializer,Expression,ref) (updater,Expression,ref) 
model	LabelCommand (refersTo,Command,ref) 
model	ConstantDeclaration (initializer,Expression,ref) 
model	ConstantAccess (constant,ConstantDeclaration,ref) 
model	Unit (comment,Comment,ref) 
model	CompilationDirectiveDeclaration (declaration,Declaration,ref) 
model	Assignment (expression,Expression,ref) (id,Access,ref) 
model	ArrayAccess (expression,Expression,ref) (array,ArrayDeclaration,ref) (index,Expression,ref) 
model	Define (value,EString,attribute) 
model	C_Unit (elements,Element,ref) 
model	FunctionsBlock (function,Function,ref) 
model	IntLiteral (value,EInteger,attribute) 
model	Ifdef (end,Endif,ref) 
model	SimpleVariableDeclaration (fragment,FragmentVariableDeclaration,ref) (type,Type,ref) (initializer,Expression,ref) 
model	IfDirective (expression,ConstantExpression,ref) 
model	ArrayDeclaration (dimensions,EInteger,attribute) (inicializer,Construction,ref) (elementType,Type,ref) 
model	Construction (element,Expression,ref) 
model	Goto (refersTo,LabelCommand,ref) 
model	Program (description,EString,attribute) (file,Unit,ref) 
model	SwitchCommand (default,DefaultOption,ref) (variable,VariableAccess,ref) (case,CaseOption,ref) 
model	CharLiteral (value,ECharacter,attribute) 
model	FloatLiteral (value,EFloat,attribute) 
model	ConditionalExpression (conector,RelationalConectorKind,attribute) 
model	DisplacementLogicExpression (operator,DisplacementLogicOperatorKind,attribute) (numberOfDisplacement,Expression,ref) 
model	StructDeclaration (element,SimpleVariableDeclaration,ref) 
model	StringLiteral (value,EString,attribute) 
model	BinaryArithmeticExpression (operator,BinaryOperatorKind,attribute) (extraOperand,Expression,ref) 
model	CaseOption (body,Block,ref) (value,Literal,ref) 
model	Block (comment,Comment,ref) (element,BlockedElement,ref) 
model	CastExpression (expression,Expression,ref) (type,Type,ref) 
model	DoubleLiteral (value,EDouble,attribute) 
model	NamedElement (name,EString,attribute) 
model	BlockedElement (element,Block,ref) 
model	ShortLiteral (value,EInt,attribute) 
model	TypeDefDeclaration (type,Type,ref) 
model	SimpleLogicExpression (operator,SimpleLogicOperatorKind,attribute) 
model	DeclarationsBlock (declaration,Declaration,ref) (directive,CompilationDirectiveDeclaration,ref) 
model	IterativeCommand (body,Block,ref) 
model	Function (modifier,ModifierKind,attribute) (functionModifier,FunctionModifierKind,attribute) (ownedParameter,Declaration,ref) (body,Block,ref) (return,Type,ref) 
model	PrototypeAccess (prototype,PrototypeFunctionDeclaration,ref) 
model	UnaryArithmeticExpression (operator,UnaryOperatorKind,attribute) 
model	LogicExpression (expression,Expression,ref) 
model	IfCommand (condition,ConditionalExpression,ref) (thenBlock,Block,ref) (elseBlock,Block,ref) 
model	VariableAccess (variable,VariableDeclaration,ref) 
model	VariableDeclaration (isAPointer,EBoolean,attribute) (numberOfPointers,EInteger,attribute) 
model	Declaration (modifier,ModifierKind,attribute) 
model	FunctionCall (argument,Expression,ref) 
model	ExpressionCommand (expression,Expression,ref) 
model	ComposedConditionalExpression (operator,RelationalOperatorKind,attribute) (term,Expression,ref) 
model	DefaultOption (body,Block,ref) 
model	ArithmeticExpression (operand,Expression,ref) 
model	EnumDeclaration (literal,Literal,ref) 
model	Ifndef (end,Endif,ref) 
model	PrototypeFunctionDeclaration (isAPointer,EBoolean,attribute) (functionModifier,FunctionModifierKind,attribute) (ownedParameter,VariableDeclaration,ref) (type,Type,ref) 
