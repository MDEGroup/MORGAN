build	ConflictId (add,void,method) (pullup,void,method) (hashCode,int,method) (equals,boolean,method) (toString,String,method) (minDepth,int,field) (inDegree,int,field) (children,java.util.Collection<org.eclipse.aether.util.graph.transformer.ConflictIdSorter.ConflictId>,field) (key,Object,field) 
build	RootQueue (add,void,method) (isEmpty,boolean,method) (remove,ConflictId,method) (nextIn,int,field) (ids,org.eclipse.aether.util.graph.transformer.ConflictIdSorter.ConflictId[],field) (nextOut,int,field) 
build	ExclusionComparator (compare,int,method) (INSTANCE,ExclusionComparator,field) 
build	Item (isNumber,boolean,method) (hashCode,int,method) (equals,boolean,method) (toString,String,method) (compareTo,int,method) (KIND_QUALIFIER,int,field) (MIN,Item,field) (KIND_MIN,int,field) (MAX,Item,field) (kind,int,field) (KIND_INT,int,field) (KIND_MAX,int,field) (KIND_BIGINT,int,field) (value,Object,field) (KIND_STRING,int,field) 
build	ScopeDeriver (deriveScope,void,method) (getInstance,ScopeDeriver,method) 
build	State (add,void,method) (prepare,void,method) (parent,org.eclipse.aether.graph.DependencyNode,method) (newConflictItem,ConflictItem,method) (push,boolean,method) (pop,void,method) (deriveScope,String,method) (winner,void,method) (depth,int,method) (scope,String,method) (finish,void,method) (loser,boolean,method) (scopes,void,method) (deriveOptional,boolean,method) (scopeCtx,ScopeContext,field) (versionSelector,VersionSelector,field) (scopeDeriver,ScopeDeriver,field) (stack,java.util.Map<java.util.List<org.eclipse.aether.graph.DependencyNode>,java.lang.Object>,field) (currentId,Object,field) (scopeSelector,ScopeSelector,field) (conflictCtx,ConflictContext,field) (resolvedIds,java.util.Map<java.lang.Object,org.eclipse.aether.graph.DependencyNode>,field) (verbose,boolean,field) (parentInfos,java.util.List<org.eclipse.aether.util.graph.transformer.ConflictResolver.NodeInfo>,field) (totalConflictItems,int,field) (potentialAncestorIds,java.util.Collection<java.lang.Object>,field) (parentNodes,java.util.List<org.eclipse.aether.graph.DependencyNode>,field) (parentScopes,java.util.List<java.lang.String>,field) (conflictIds,java.util.Map<?,?>,field) (optionalitySelector,OptionalitySelector,field) (items,java.util.List<org.eclipse.aether.util.graph.transformer.ConflictResolver.ConflictItem>,field) (parentOptionals,java.util.List<java.lang.Boolean>,field) (infos,java.util.Map<java.util.List<org.eclipse.aether.graph.DependencyNode>,org.eclipse.aether.util.graph.transformer.ConflictResolver.NodeInfo>,field) 
build	NodeInfo (add,void,method) (update,int,method) (minDepth,int,field) (derivedOptionalities,int,field) (OPT_TRUE,int,field) (children,java.util.List<org.eclipse.aether.util.graph.transformer.ConflictResolver.ConflictItem>,field) (derivedScopes,Object,field) (CHANGE_SCOPE,int,field) (OPT_FALSE,int,field) (CHANGE_OPTIONAL,int,field) 
build	MirrorDef (mirrorOfIds,String,field) (mirrorOfTypes,String,field) (repositoryManager,boolean,field) (id,String,field) (type,String,field) (url,String,field) 
build	ProxyDef (proxy,org.eclipse.aether.repository.Proxy,field) (nonProxyHosts,NonProxyHosts,field) 
build	JreProxyAuthentication (hashCode,int,method) (equals,boolean,method) (digest,void,method) (fill,void,method) (INSTANCE,org.eclipse.aether.repository.Authentication,field) 
build	ConflictItem (getDepth,int,method) (addScope,void,method) (addOptional,void,method) (isSibling,boolean,method) (toString,String,method) (getNode,org.eclipse.aether.graph.DependencyNode,method) (getOptionalities,int,method) (getDependency,org.eclipse.aether.graph.Dependency,method) (getScopes,java.util.Collection<java.lang.String>,method) (artifact,org.eclipse.aether.artifact.Artifact,field) (parent,java.util.List<org.eclipse.aether.graph.DependencyNode>,field) (node,org.eclipse.aether.graph.DependencyNode,field) (depth,int,field) (optionalities,int,field) (OPTIONAL_FALSE,int,field) (scopes,Object,field) (OPTIONAL_TRUE,int,field) 
build	Tokenizer (next,boolean,method) (toString,String,method) (toItem,Item,method) (QUALIFIER_MILESTONE,Integer,field) (number,boolean,field) (QUALIFIERS,java.util.Map<java.lang.String,java.lang.Integer>,field) (terminatedByNumber,boolean,field) (QUALIFIER_BETA,Integer,field) (index,int,field) (version,String,field) (QUALIFIER_ALPHA,Integer,field) (token,String,field) 
build	NonProxyHosts (isNonProxyHost,boolean,method) (patterns,java.util.regex.Pattern[],field) 
build	Key (hashCode,int,method) (equals,boolean,method) (keys,java.util.List<java.lang.Object>,field) 
build	VersionSelector (selectVersion,void,method) (getInstance,VersionSelector,method) 
