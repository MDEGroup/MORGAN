model	OOInitializerList (initializerExpressions,OOExpression,ref) 
model	OOEnumeration (name,EString,attribute) (options,EString,attribute) (package,OOPackage,ref) 
model	OOLongLiteral (value,ELong,attribute) 
model	OOTwoOperandAssignableExpression (assigned,EBoolean,attribute) 
model	OOClass (languages,OOLanguage,attribute) (keep,EBoolean,attribute) (name,EString,attribute) (constructors,OOConstructor,ref) (package,OOPackage,ref) (methods,OOMethod,ref) (members,OOMember,ref) 
model	OOIndexing (collectionExpression,OOExpression,ref) (indexExpression,OOExpression,ref) 
model	OOConstructor (visibility,OOVisibility,attribute) (className,EString,attribute) (statements,OOStatement,ref) (parameters,OOVariable,ref) 
model	OOForEach (loopVariable,OOVariable,ref) (bodyStatements,OOStatement,ref) (traversedVariable,OOVariable,ref) 
model	OOTernaryOperator (condition,OOExpression,ref) (positiveBranch,OOExpression,ref) (negativeBranch,OOExpression,ref) 
model	OONewArray (arrayType,OOType,ref) (initializerList,OOInitializerList,ref) 
model	OOVariableDeclarationList (variableDeclarations,OOVariable,ref) 
model	OOReturn (returnedExpresssion,OOExpression,ref) 
model	OOLanguageSpecificExpression (snippets,OOLanguageSpecificSnippet,ref) 
model	OOMethod (static,EBoolean,attribute) (visibility,OOVisibility,attribute) (languages,OOLanguage,attribute) (name,EString,attribute) (statements,OOStatement,ref) (parameters,OOVariable,ref) (returnType,OOType,ref) 
model	OOTypeCast (expression,OOExpression,ref) (type,OOType,ref) 
model	OOOneOperandArithmeticExpression (operand,OOExpression,ref) 
model	OONewClass (className,EString,attribute) (constructorParameterExpressions,OOExpression,ref) 
model	OOLanguageSpecificSnippet (code,EString,attribute) (lang,OOLanguage,attribute) 
model	OOTwoOperandLogicalExpression (leftSide,OOExpression,ref) (rightSide,OOExpression,ref) 
model	OOVariable (transient,EBoolean,attribute) (name,EString,attribute) (initializerExpression,OOExpression,ref) (type,OOType,ref) 
model	OOSwitch (defaultStatement,OODefault,ref) (caseStatements,OOCase,ref) (controllerExpression,OOExpression,ref) 
model	OOOneOperandLogicalExpression (operand,OOExpression,ref) 
model	OOCommentOwner (beforeComments,OOComment,ref) (afterComments,OOComment,ref) 
model	OOCompoundStatement (bodyStatements,OOStatement,ref) 
model	OOModel (globalVariables,OOVariable,ref) (oopackage,OOPackage,ref) (globalFunctions,OOMethod,ref) (packages,OOPackage,ref) 
model	OOFloatLiteral (value,EFloat,attribute) 
model	OOComment (isBlockComment,EBoolean,attribute) (text,EString,attribute) 
model	OOFunctionCallExpression (functionName,EString,attribute) (ownerExpression,OOExpression,ref) (argumentExpressions,OOExpression,ref) 
model	OOMember (static,EBoolean,attribute) (visibility,OOVisibility,attribute) (languages,OOLanguage,attribute) 
model	OOType (collectionType,OOCollectionType,attribute) (arrayDimensions,EInt,attribute) (numberOfIndirections,EInt,attribute) (baseType,OOBaseType,attribute) (enumType,OOEnumeration,ref) (arraySizeExpressions,OOExpression,ref) (classType,OOClass,ref) 
model	OOConditionalStatement (condition,OOExpression,ref) 
model	OOAssignmentExpression (leftSide,OOExpression,ref) (rightSide,OOExpression,ref) 
model	OOStringLiteral (value,EString,attribute) 
model	OOTwoOperandArithmeticExpression (leftSide,OOExpression,ref) (rightSide,OOExpression,ref) 
model	OOFieldReferenceExpression (fieldName,EString,attribute) (fieldOwner,OOExpression,ref) 
model	OODoubleLiteral (value,EDouble,attribute) 
model	OOLogicalLiteral (value,EBoolean,attribute) 
model	OOFor (incrementExpression,OOExpression,ref) (initStatement,OOStatement,ref) 
model	OOBoolLiteral (value,EBoolean,attribute) 
model	OOIntegerLiteral (value,EInt,attribute) 
model	OOIf (elseStatements,OOStatement,ref) (elseIf,OOIf,ref) 
model	OOCase (expression,OOExpression,ref) 
model	OOVariableReferenceExpression (variable,OOVariable,ref) 
model	OOPackage (name,EString,attribute) (enums,OOEnumeration,ref) (classes,OOClass,ref) 
model	OOComparatorExpression (leftSide,OOExpression,ref) (rightSide,OOExpression,ref) 
