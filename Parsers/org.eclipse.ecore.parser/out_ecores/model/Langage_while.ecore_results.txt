model	VAR (cf,EString,attribute) (bv,EString,attribute) 
model	ExprNot (exQ2,ExprEq,ref) (exQ1,ExprEq,ref) 
model	Function (def,Definition,ref) (name,SYMB,ref) 
model	Input (v,VAR,ref) 
model	ExprOr (exn2,ExprNot,ref) (exn1,ExprNot,ref) 
model	Output (v,VAR,ref) 
model	Commands (c,Command,ref) 
model	Ifconfort (ex,Expr,ref) (c,Commands,ref) 
model	SYMB (bs,EString,attribute) (cf,EString,attribute) 
model	ExprSimple (nil,EString,attribute) (mot,EString,attribute) (ex,Expr,ref) (v,VAR,ref) (sym,SYMB,ref) (lex,LExpr,ref) 
model	Program (u,EString,attribute) (pp,Program,ref) (f,Function,ref) 
model	Vars (vs,VAR,ref) 
model	Definition (com,Commands,ref) (in,Input,ref) (out,Output,ref) 
model	For (ex,Expr,ref) (c,Commands,ref) 
model	While (ex,Expr,ref) (c,Commands,ref) 
model	ExprEq (ex,Expr,ref) (exS2,ExprSimple,ref) (exS1,ExprSimple,ref) 
model	ExprAnd (exo2,ExprOr,ref) (exo1,ExprOr,ref) 
model	LExpr (e,Expr,ref) 
model	Expr (exs,ExprSimple,ref) (exa,ExprAnd,ref) 
model	Command (nop,EString,attribute) (wh,While,ref) (ifc,Ifconfort,ref) (for,For,ref) (fore,Foreach,ref) (if,If,ref) (assign,Assign,ref) 
model	Model (nn,Program,ref) 
model	Foreach (c,Commands,ref) (ex2,Expr,ref) (ex1,Expr,ref) 
model	Assign (ex,Exprs,ref) (vs,Vars,ref) 
model	Exprs (ex,Expr,ref) 
model	If (ct,Commands,ref) (ce,Commands,ref) (ex,Expr,ref) 
