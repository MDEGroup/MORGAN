model	BooleanLiteral (value,EString,attribute) 
model	Formal (type_decl,Type,ref) 
model	CompareExpression (op,EString,attribute) (left,Expression,ref) (right,Expression,ref) 
model	Attr (init,Expression,ref) (type_decl,Type,ref) 
model	CaseExpression (expr,Expression,ref) (case,Case,ref) 
model	Case (type_decl,Type,ref) (expr,Expression,ref) 
model	DispatchExpression (actual,Expression,ref) (ref,IdentifierRefExpression,ref) (chain,DispatchExpression,ref) (type_name,Type,ref) (left,PrimaryExpression,ref) 
model	AssignmentExpression (name,EString,attribute) (expr,Expression,ref) 
model	LetExpression (body,Expression,ref) (declaration,LetDeclaration,ref) 
model	NegationExpression (expr,Expression,ref) 
model	AdditionExpression (left,Expression,ref) (right,Expression,ref) 
model	IdentifierRefExpression (id,IdentifiableElement,ref) 
model	Program (classes,Class_,ref) 
model	IsvoidExpression (expr,Expression,ref) 
model	NewExpression (type_name,Type,ref) 
model	ConditionalExpression (pred,Expression,ref) (else_exp,Expression,ref) (then_exp,Expression,ref) 
model	IdentifiableElement (name,EString,attribute) 
model	Method (return_type,Type,ref) (expr,Expression,ref) (formals,Formal,ref) 
model	BlockExpression (body,Expression,ref) 
model	Div (op,Expression,ref) (right,Expression,ref) 
model	Class_ (parent,Type,ref) (features,Feature_,ref) 
model	StringLiteral (value,EString,attribute) 
model	LoopExpression (pred,Expression,ref) (body,Expression,ref) 
model	LetDeclaration (init,Expression,ref) (type_decl,Type,ref) 
model	ParenExpression (expr,Expression,ref) 
model	MultiplicationExpression (left,Expression,ref) (right,Expression,ref) 
model	NumberLiteral (value,EInt,attribute) 
model	Minus (op,Expression,ref) (right,Expression,ref) 
model	IntegerCompositeExpression (expr,Expression,ref) 
