<?xml version="1.0" encoding="ASCII"?>
<java:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:java="http://www.eclipse.org/MoDisco/Java/0.2.incubation/java" name="org.easymock__easymockclassextension___3.2.jar">
  <ownedElements name="org">
    <ownedPackages name="easymock">
      <ownedPackages name="classextension">
        <ownedElements xsi:type="java:ClassDeclaration" originalClassFile="//@archives.0/@classFiles.0" name="ConstructorArgs" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.3/@parameters.1/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.4/@parameters.2/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.7/@parameters.1/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.8/@parameters.2/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.11/@parameters.1/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.12/@parameters.2/@type">
          <annotations originalClassFile="//@archives.0/@classFiles.0">
            <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
          </annotations>
          <modifier visibility="public"/>
          <bodyDeclarations xsi:type="java:ConstructorDeclaration" originalClassFile="//@archives.0/@classFiles.0" name="ConstructorArgs">
            <modifier visibility="public"/>
            <parameters originalClassFile="//@archives.0/@classFiles.0" name="arg0">
              <type type="//@orphanTypes.10"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.0" name="arg1" varargs="true">
              <type type="//@orphanTypes.11"/>
            </parameters>
          </bodyDeclarations>
          <superClass type="//@orphanTypes.17"/>
        </ownedElements>
        <ownedElements xsi:type="java:ClassDeclaration" originalClassFile="//@archives.0/@classFiles.1" name="EasyMock">
          <annotations originalClassFile="//@archives.0/@classFiles.1">
            <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
          </annotations>
          <modifier visibility="public"/>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.1" name="createStrictControl">
            <modifier visibility="public" static="true"/>
            <returnType type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.4"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.1" name="createControl">
            <modifier visibility="public" static="true"/>
            <returnType type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.4"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.1" name="createNiceControl">
            <modifier visibility="public" static="true"/>
            <returnType type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.4"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.1" name="createMockBuilder">
            <modifier visibility="public" static="true"/>
            <parameters originalClassFile="//@archives.0/@classFiles.1" name="arg0">
              <type type="//@orphanTypes.13"/>
            </parameters>
            <typeParameters originalClassFile="//@archives.0/@classFiles.1" name="T" usagesInTypeAccess="//@orphanTypes.13/@typeArguments.0 //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.1/@returnType"/>
            <returnType type="//@orphanTypes.12"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:ConstructorDeclaration" originalClassFile="//@archives.0/@classFiles.1" name="EasyMock">
            <modifier visibility="protected"/>
          </bodyDeclarations>
          <superClass type="//@orphanTypes.18"/>
        </ownedElements>
        <ownedElements xsi:type="java:ClassDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="EasyMockSupport">
          <annotations originalClassFile="//@archives.0/@classFiles.2">
            <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
          </annotations>
          <modifier visibility="public"/>
          <bodyDeclarations xsi:type="java:ConstructorDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="EasyMockSupport">
            <modifier visibility="public"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="createStrictMock">
            <annotations originalClassFile="//@archives.0/@classFiles.2">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
            </annotations>
            <modifier visibility="public"/>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg0">
              <type type="//@orphanTypes.13"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg1" varargs="true">
              <type type="//@orphanTypes.14"/>
            </parameters>
            <typeParameters originalClassFile="//@archives.0/@classFiles.2" name="T" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.2/@returnType"/>
            <returnType type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.3/@typeParameters.0"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="createStrictMock">
            <annotations originalClassFile="//@archives.0/@classFiles.2">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
            </annotations>
            <modifier visibility="public"/>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg0">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.3"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg1">
              <type type="//@orphanTypes.13"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg2" varargs="true">
              <type type="//@orphanTypes.14"/>
            </parameters>
            <typeParameters originalClassFile="//@archives.0/@classFiles.2" name="T" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.3/@returnType"/>
            <returnType type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.1/@typeParameters.0"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="createStrictMock">
            <annotations originalClassFile="//@archives.0/@classFiles.2">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
            </annotations>
            <modifier visibility="public"/>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg0">
              <type type="//@orphanTypes.13"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg1">
              <type type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg2" varargs="true">
              <type type="//@orphanTypes.14"/>
            </parameters>
            <typeParameters originalClassFile="//@archives.0/@classFiles.2" name="T" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.4/@returnType"/>
            <returnType type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.2/@typeParameters.0"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="createStrictMock">
            <annotations originalClassFile="//@archives.0/@classFiles.2">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
            </annotations>
            <modifier visibility="public"/>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg0">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.3"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg1">
              <type type="//@orphanTypes.13"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg2">
              <type type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg3" varargs="true">
              <type type="//@orphanTypes.14"/>
            </parameters>
            <typeParameters originalClassFile="//@archives.0/@classFiles.2" name="T" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.5/@returnType"/>
            <returnType type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.3/@typeParameters.0"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="createMock">
            <annotations originalClassFile="//@archives.0/@classFiles.2">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
            </annotations>
            <modifier visibility="public"/>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg0">
              <type type="//@orphanTypes.13"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg1" varargs="true">
              <type type="//@orphanTypes.14"/>
            </parameters>
            <typeParameters originalClassFile="//@archives.0/@classFiles.2" name="T" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.6/@returnType"/>
            <returnType type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.4/@typeParameters.0"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="createMock">
            <annotations originalClassFile="//@archives.0/@classFiles.2">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
            </annotations>
            <modifier visibility="public"/>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg0">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.3"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg1">
              <type type="//@orphanTypes.13"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg2" varargs="true">
              <type type="//@orphanTypes.14"/>
            </parameters>
            <typeParameters originalClassFile="//@archives.0/@classFiles.2" name="T" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.7/@returnType"/>
            <returnType type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.5/@typeParameters.0"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="createMock">
            <annotations originalClassFile="//@archives.0/@classFiles.2">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
            </annotations>
            <modifier visibility="public"/>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg0">
              <type type="//@orphanTypes.13"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg1">
              <type type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg2" varargs="true">
              <type type="//@orphanTypes.14"/>
            </parameters>
            <typeParameters originalClassFile="//@archives.0/@classFiles.2" name="T" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.8/@returnType"/>
            <returnType type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.6/@typeParameters.0"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="createMock">
            <annotations originalClassFile="//@archives.0/@classFiles.2">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
            </annotations>
            <modifier visibility="public"/>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg0">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.3"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg1">
              <type type="//@orphanTypes.13"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg2">
              <type type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg3" varargs="true">
              <type type="//@orphanTypes.14"/>
            </parameters>
            <typeParameters originalClassFile="//@archives.0/@classFiles.2" name="T" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.9/@returnType"/>
            <returnType type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.7/@typeParameters.0"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="createNiceMock">
            <annotations originalClassFile="//@archives.0/@classFiles.2">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
            </annotations>
            <modifier visibility="public"/>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg0">
              <type type="//@orphanTypes.13"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg1" varargs="true">
              <type type="//@orphanTypes.14"/>
            </parameters>
            <typeParameters originalClassFile="//@archives.0/@classFiles.2" name="T" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.10/@returnType"/>
            <returnType type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.8/@typeParameters.0"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="createNiceMock">
            <annotations originalClassFile="//@archives.0/@classFiles.2">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
            </annotations>
            <modifier visibility="public"/>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg0">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.3"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg1">
              <type type="//@orphanTypes.13"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg2" varargs="true">
              <type type="//@orphanTypes.14"/>
            </parameters>
            <typeParameters originalClassFile="//@archives.0/@classFiles.2" name="T" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.11/@returnType"/>
            <returnType type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.9/@typeParameters.0"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="createNiceMock">
            <annotations originalClassFile="//@archives.0/@classFiles.2">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
            </annotations>
            <modifier visibility="public"/>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg0">
              <type type="//@orphanTypes.13"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg1">
              <type type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg2" varargs="true">
              <type type="//@orphanTypes.14"/>
            </parameters>
            <typeParameters originalClassFile="//@archives.0/@classFiles.2" name="T" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.12/@returnType"/>
            <returnType type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.10/@typeParameters.0"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="createNiceMock">
            <annotations originalClassFile="//@archives.0/@classFiles.2">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
            </annotations>
            <modifier visibility="public"/>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg0">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.3"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg1">
              <type type="//@orphanTypes.13"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg2">
              <type type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
            </parameters>
            <parameters originalClassFile="//@archives.0/@classFiles.2" name="arg3" varargs="true">
              <type type="//@orphanTypes.14"/>
            </parameters>
            <typeParameters originalClassFile="//@archives.0/@classFiles.2" name="T" usagesInTypeAccess="//@orphanTypes.15/@typeArguments.0"/>
            <returnType type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.11/@typeParameters.0"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="createStrictControl">
            <modifier visibility="public"/>
            <returnType type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.4"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="createControl">
            <modifier visibility="public"/>
            <returnType type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.4"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" originalClassFile="//@archives.0/@classFiles.2" name="createNiceControl">
            <modifier visibility="public"/>
            <returnType type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.4"/>
          </bodyDeclarations>
          <superClass type="//@orphanTypes.19"/>
        </ownedElements>
        <ownedElements xsi:type="java:InterfaceDeclaration" originalClassFile="//@archives.0/@classFiles.3" name="IMockBuilder" usagesInTypeAccess="//@orphanTypes.12/@type">
          <annotations originalClassFile="//@archives.0/@classFiles.3">
            <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
          </annotations>
          <modifier visibility="public" inheritance="abstract"/>
          <superInterfaces type="//@orphanTypes.15"/>
          <typeParameters originalClassFile="//@archives.0/@classFiles.3" name="T" usagesInTypeAccess="//@orphanTypes.16/@typeArguments.0"/>
        </ownedElements>
        <ownedElements xsi:type="java:InterfaceDeclaration" originalClassFile="//@archives.0/@classFiles.4" name="IMocksControl" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@superInterfaces.0 //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.0/@returnType //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.1/@returnType //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.2/@returnType //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.13/@returnType //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.14/@returnType //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.15/@returnType">
          <annotations originalClassFile="//@archives.0/@classFiles.4">
            <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
          </annotations>
          <modifier visibility="public" inheritance="abstract"/>
          <superInterfaces type="//@orphanTypes.21"/>
        </ownedElements>
        <ownedPackages name="internal">
          <ownedElements xsi:type="java:ClassDeclaration" originalClassFile="//@archives.0/@classFiles.5" name="MockBuilder">
            <annotations originalClassFile="//@archives.0/@classFiles.5">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
            </annotations>
            <modifier visibility="public"/>
            <bodyDeclarations xsi:type="java:ConstructorDeclaration" originalClassFile="//@archives.0/@classFiles.5" name="MockBuilder">
              <modifier visibility="public"/>
              <parameters originalClassFile="//@archives.0/@classFiles.5" name="arg0">
                <type type="//@orphanTypes.13"/>
              </parameters>
            </bodyDeclarations>
            <superInterfaces type="//@orphanTypes.12"/>
            <typeParameters originalClassFile="//@archives.0/@classFiles.5" name="T" usagesInTypeAccess="//@orphanTypes.12/@typeArguments.0"/>
            <superClass type="//@orphanTypes.16"/>
          </ownedElements>
          <ownedElements xsi:type="java:ClassDeclaration" originalClassFile="//@archives.0/@classFiles.6" name="MocksClassControl">
            <annotations originalClassFile="//@archives.0/@classFiles.6">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
            </annotations>
            <modifier visibility="public"/>
            <bodyDeclarations xsi:type="java:FieldDeclaration" originalClassFile="//@archives.0/@classFiles.6">
              <modifier visibility="private" static="true"/>
              <type type="//@orphanTypes.1"/>
              <fragments originalClassFile="//@archives.0/@classFiles.6" name="serialVersionUID"/>
            </bodyDeclarations>
            <bodyDeclarations xsi:type="java:ConstructorDeclaration" originalClassFile="//@archives.0/@classFiles.6" name="MocksClassControl">
              <modifier visibility="public"/>
              <parameters originalClassFile="//@archives.0/@classFiles.6" name="arg0">
                <type type="//@orphanTypes.24"/>
              </parameters>
            </bodyDeclarations>
            <superInterfaces type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.4"/>
            <superClass type="//@orphanTypes.23"/>
          </ownedElements>
        </ownedPackages>
      </ownedPackages>
    </ownedPackages>
  </ownedElements>
  <ownedElements name="java" proxy="true">
    <ownedPackages name="lang" proxy="true">
      <ownedElements xsi:type="java:AnnotationTypeDeclaration" name="Deprecated" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@annotations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@annotations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@annotations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.1/@annotations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.2/@annotations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.3/@annotations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.4/@annotations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.5/@annotations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.6/@annotations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.7/@annotations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.8/@annotations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.9/@annotations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.10/@annotations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.11/@annotations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.12/@annotations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.3/@annotations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.4/@annotations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@annotations.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@annotations.0/@type"/>
      <ownedElements xsi:type="java:ClassDeclaration" name="Object" proxy="true" usagesInTypeAccess="//@orphanTypes.11/@elementType"/>
      <ownedElements xsi:type="java:ClassDeclaration" name="Class" proxy="true" usagesInTypeAccess="//@orphanTypes.13/@type">
        <superInterfaces type="//@ownedElements.1/@ownedPackages.1/@ownedElements.0"/>
        <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5"/>
        <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.6"/>
        <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.3"/>
        <typeParameters name="T" proxy="true"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" name="String" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.2/@parameters.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.4/@parameters.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.6/@parameters.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.8/@parameters.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.10/@parameters.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.12/@parameters.0/@type">
        <superInterfaces type="//@ownedElements.1/@ownedPackages.1/@ownedElements.0"/>
        <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
        <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedElements.5"/>
      </ownedElements>
      <ownedElements xsi:type="java:InterfaceDeclaration" name="Comparable" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedElements.3/@superInterfaces.1">
        <typeParameters name="T" proxy="true"/>
      </ownedElements>
      <ownedElements xsi:type="java:InterfaceDeclaration" name="CharSequence" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedElements.3/@superInterfaces.2"/>
      <ownedPackages name="reflect" proxy="true">
        <ownedElements xsi:type="java:ClassDeclaration" name="Constructor" proxy="true" usagesInTypeAccess="//@orphanTypes.10/@type">
          <typeParameters name="T" proxy="true"/>
          <superClass type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.1"/>
        </ownedElements>
        <ownedElements xsi:type="java:ClassDeclaration" name="Executable" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@superClass //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.7/@superClass">
          <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.4"/>
          <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5"/>
          <superClass type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
        </ownedElements>
        <ownedElements xsi:type="java:ClassDeclaration" name="AccessibleObject" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@superClass">
          <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.3"/>
        </ownedElements>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="AnnotatedElement" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@superInterfaces.0 //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5/@superInterfaces.0 //@ownedElements.1/@ownedPackages.0/@ownedElements.2/@superInterfaces.3"/>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="Member" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@superInterfaces.0"/>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="GenericDeclaration" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@superInterfaces.1 //@ownedElements.1/@ownedPackages.0/@ownedElements.2/@superInterfaces.1">
          <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.3"/>
        </ownedElements>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="Type" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedElements.2/@superInterfaces.2"/>
        <ownedElements xsi:type="java:ClassDeclaration" name="Method" proxy="true" usagesInTypeAccess="//@orphanTypes.14/@elementType">
          <superClass type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.1"/>
        </ownedElements>
      </ownedPackages>
    </ownedPackages>
    <ownedPackages name="io" proxy="true">
      <ownedElements xsi:type="java:InterfaceDeclaration" name="Serializable" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedElements.2/@superInterfaces.0 //@ownedElements.1/@ownedPackages.0/@ownedElements.3/@superInterfaces.0"/>
    </ownedPackages>
  </ownedElements>
  <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int"/>
  <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.0/@type"/>
  <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
  <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
  <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
  <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void"/>
  <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
  <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
  <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
  <orphanTypes xsi:type="java:WildCardType" name="?" usagesInTypeAccess="//@orphanTypes.10/@typeArguments.0"/>
  <orphanTypes xsi:type="java:ParameterizedType" name="java.lang.reflect.Constructor&lt;?>" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0/@type">
    <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
    <typeArguments type="//@orphanTypes.9"/>
  </orphanTypes>
  <orphanTypes xsi:type="java:ArrayType" name="java.lang.Object[]" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@parameters.1/@type" dimensions="1">
    <elementType type="//@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
  </orphanTypes>
  <orphanTypes xsi:type="java:ParameterizedType" name="org.easymock.classextension.IMockBuilder&lt;T>" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.3/@returnType //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@superInterfaces.0">
    <type type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.3"/>
    <typeArguments type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@typeParameters.0"/>
  </orphanTypes>
  <orphanTypes xsi:type="java:ParameterizedType" name="java.lang.Class&lt;T>" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.3/@parameters.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.1/@parameters.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.2/@parameters.1/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.3/@parameters.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.4/@parameters.1/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.5/@parameters.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.6/@parameters.1/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.7/@parameters.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.8/@parameters.1/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.9/@parameters.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.10/@parameters.1/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.11/@parameters.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.12/@parameters.1/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0/@type">
    <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.2"/>
    <typeArguments type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.3/@typeParameters.0"/>
  </orphanTypes>
  <orphanTypes xsi:type="java:ArrayType" name="java.lang.reflect.Method[]" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.1/@parameters.1/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.2/@parameters.2/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.3/@parameters.2/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.4/@parameters.3/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.5/@parameters.1/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.6/@parameters.2/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.7/@parameters.2/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.8/@parameters.3/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.9/@parameters.1/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.10/@parameters.2/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.11/@parameters.2/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.12/@parameters.3/@type" dimensions="1">
    <elementType type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.7"/>
  </orphanTypes>
  <orphanTypes xsi:type="java:ParameterizedType" name="org.easymock.IMockBuilder&lt;T>" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.3/@superInterfaces.0">
    <type type="//@orphanTypes.20"/>
    <typeArguments type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@bodyDeclarations.12/@typeParameters.0"/>
  </orphanTypes>
  <orphanTypes xsi:type="java:ParameterizedType" name="org.easymock.internal.MockBuilder&lt;T>" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@superClass">
    <type type="//@orphanTypes.22"/>
    <typeArguments type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.3/@typeParameters.0"/>
  </orphanTypes>
  <orphanTypes xsi:type="java:ClassDeclaration" name="org.easymock.ConstructorArgs" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@superClass"/>
  <orphanTypes xsi:type="java:ClassDeclaration" name="org.easymock.EasyMock" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@superClass"/>
  <orphanTypes xsi:type="java:ClassDeclaration" name="org.easymock.EasyMockSupport" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@superClass"/>
  <orphanTypes xsi:type="java:ClassDeclaration" name="org.easymock.IMockBuilder" proxy="true" usagesInTypeAccess="//@orphanTypes.15/@type"/>
  <orphanTypes xsi:type="java:ClassDeclaration" name="org.easymock.IMocksControl" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.4/@superInterfaces.0"/>
  <orphanTypes xsi:type="java:ClassDeclaration" name="org.easymock.internal.MockBuilder" proxy="true" usagesInTypeAccess="//@orphanTypes.16/@type"/>
  <orphanTypes xsi:type="java:ClassDeclaration" name="org.easymock.internal.MocksControl" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@superClass"/>
  <orphanTypes xsi:type="java:ClassDeclaration" name="org.easymock.internal.MocksControl.MockType" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.1/@parameters.0/@type"/>
  <archives name="org.easymock__easymockclassextension___3.2.jar" originalFilePath="/Users/juri/PycharmProjects/GithubCollectionParser/CEZAR/jars/org.easymock__easymockclassextension___3.2.jar">
    <classFiles name="ConstructorArgs.class" originalFilePath="/org/easymock/classextension/ConstructorArgs.class" type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0" package="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0"/>
    <classFiles name="EasyMock.class" originalFilePath="/org/easymock/classextension/EasyMock.class" type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1" package="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0"/>
    <classFiles name="EasyMockSupport.class" originalFilePath="/org/easymock/classextension/EasyMockSupport.class" type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.2" package="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0"/>
    <classFiles name="IMockBuilder.class" originalFilePath="/org/easymock/classextension/IMockBuilder.class" type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.3" package="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0"/>
    <classFiles name="IMocksControl.class" originalFilePath="/org/easymock/classextension/IMocksControl.class" type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.4" package="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0"/>
    <classFiles name="MockBuilder.class" originalFilePath="/org/easymock/classextension/internal/MockBuilder.class" type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0" package="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0"/>
    <classFiles name="MocksClassControl.class" originalFilePath="/org/easymock/classextension/internal/MocksClassControl.class" type="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.1" package="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0"/>
    <manifest>
      <mainAttributes key="Implementation-Title" value="EasyMock Class extension"/>
      <mainAttributes key="Bundle-Description" value="The EasyMock Class Extension allows to generate Mock Objects for classes"/>
      <mainAttributes key="Bundle-License" value="http://www.apache.org/licenses/LICENSE-2.0.txt"/>
      <mainAttributes key="Bundle-SymbolicName" value="org.easymock.classextension"/>
      <mainAttributes key="Implementation-Version" value="3.2"/>
      <mainAttributes key="Archiver-Version" value="Plexus Archiver"/>
      <mainAttributes key="Built-By" value="Henri"/>
      <mainAttributes key="Specification-Vendor" value="OFFIS, Henri Tremblay"/>
      <mainAttributes key="Bnd-LastModified" value="1373493978193"/>
      <mainAttributes key="Bundle-ManifestVersion" value="2"/>
      <mainAttributes key="Implementation-Vendor-Id" value="org.easymock"/>
      <mainAttributes key="Specification-Title" value="EasyMock Class extension"/>
      <mainAttributes key="Bundle-Vendor" value="OFFIS, Henri Tremblay"/>
      <mainAttributes key="Import-Package" value="org.easymock;version=&quot;[3.2,4)&quot;,org.easymock.classextension,org.easymock.classextension.internal;poweruser=true,org.easymock.internal;poweruser=true;version=&quot;[3.2,4)&quot;,org.objenesis;version=&quot;[1.3,2)&quot;"/>
      <mainAttributes key="Tool" value="Bnd-1.43.0"/>
      <mainAttributes key="Manifest-Version" value="1.0"/>
      <mainAttributes key="Implementation-Vendor" value="OFFIS, Henri Tremblay"/>
      <mainAttributes key="Export-Package" value="org.easymock.classextension.internal;poweruser=true;uses:=&quot;org.easymock.internal,org.easymock.classextension&quot;;version=&quot;3.2.0&quot;,org.easymock.classextension;uses:=&quot;org.easymock,org.easymock.classextension.internal,org.easymock.internal&quot;;version=&quot;3.2.0&quot;"/>
      <mainAttributes key="Bundle-Name" value="EasyMock Class extension"/>
      <mainAttributes key="Bundle-Version" value="3.2.0"/>
      <mainAttributes key="Created-By" value="Apache Maven Bundle Plugin"/>
      <mainAttributes key="Build-Jdk" value="1.7.0_25"/>
      <mainAttributes key="Specification-Version" value="3.2"/>
    </manifest>
  </archives>
</java:Model>
