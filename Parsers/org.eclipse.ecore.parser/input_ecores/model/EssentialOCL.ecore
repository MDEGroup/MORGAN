<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="essentialocl" nsURI="http://www.tu-dresden.de/ocl20/pivot/2007/essentialocl"
    nsPrefix="essentialocl">
  <eSubpackages name="types" nsURI="http://www.omg.org/2006/essentialocl/types" nsPrefix="types">
    <eClassifiers xsi:type="ecore:EClass" name="BagType" eSuperTypes="#//types/CollectionType"/>
    <eClassifiers xsi:type="ecore:EClass" name="TupleType" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type">
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclLibrary" lowerBound="1"
          eType="#//types/OclLibrary" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p>&#xD;&#xA;The reference to the {@link OclLibrary} facade class is necessary&#xD;&#xA;for determining type conformance and common super types. This&#xD;&#xA;implementation uses a dependency injection approach. Whenever&#xD;&#xA;a &lt;code>TupleType&lt;/code> is created, the reference to the &#xD;&#xA;&lt;code>OclLibrary&lt;/code> should be set. Note that the old toolkit&#xD;&#xA;ised a  Singleton approach which is not repeated here to maintain&#xD;&#xA;clear interfaces.&#xD;&#xA;&lt;/p>"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionType" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type">
      <eStructuralFeatures xsi:type="ecore:EReference" name="elementType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"
          resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclLibrary" lowerBound="1"
          eType="#//types/OclLibrary" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p>&#xD;&#xA;The reference to the {@link OclLibrary} facade class is necessary&#xD;&#xA;for determining type conformance and common super types. This&#xD;&#xA;implementation uses a dependency injection approach. Whenever&#xD;&#xA;a &lt;code>CollectionType&lt;/code> is created, the reference to the &#xD;&#xA;&lt;code>OclLibrary&lt;/code> should be set. Note that the old toolkit&#xD;&#xA;used a  Singleton approach which is not repeated here to maintain&#xD;&#xA;clear interfaces.&#xD;&#xA;&lt;/p>"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" lowerBound="1"
          eType="#//expressions/CollectionKind">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p>&#xD;&#xA;Identifies the kind of this &lt;code>CollectionType&lt;/code>. This is necessary&#xD;&#xA;to clearly differentiate an instance of &lt;code>CollectionType&lt;/code> from&#xD;&#xA;instances of its subclasses. This is required when determining type conformance&#xD;&#xA;of one collection type with another (see the documentation of {@link #conformsTo}).&#xD;&#xA;Unfortunately, there is no equivalent in Java for the OCL &lt;code>oclIsTypeOf&lt;/code>&#xD;&#xA;operation. The &lt;code>instanceof&lt;/code> operator cannot be used since it would&#xD;&#xA;return &lt;code>true&lt;/code> for subclasses as well.&#xD;&#xA;&lt;/p>"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="InvalidType" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type">
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclLibrary" lowerBound="1"
          eType="#//types/OclLibrary" eOpposite="#//types/OclLibrary/oclInvalid"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OrderedSetType" eSuperTypes="#//types/CollectionType"/>
    <eClassifiers xsi:type="ecore:EClass" name="SequenceType" eSuperTypes="#//types/CollectionType"/>
    <eClassifiers xsi:type="ecore:EClass" name="SetType" eSuperTypes="#//types/CollectionType"/>
    <eClassifiers xsi:type="ecore:EClass" name="VoidType" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type">
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclLibrary" lowerBound="1"
          eType="#//types/OclLibrary" eOpposite="#//types/OclLibrary/oclVoid"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TypeType" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>&#xD;&#xA;The &lt;code>Type&lt;/code> represented by this &lt;code>TypeType&lt;/code>.&#xD;&#xA;&lt;/p>"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="representedType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"
          resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OclLibrary">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>&#xD;&#xA;The &lt;code>OclLibrary&lt;/code> interface provides access  to the types of the&#xD;&#xA;OCL Standard Library as defined in the OCL specification, Chapter 11.&#xD;&#xA;As EMF does not allow to model operations with class scope, the&#xD;&#xA;&lt;code>OclLibrary&lt;code> also provides a version of the&#xD;&#xA;{@link #makeTupleType() TupleType::make} operation (with JMI, this method&#xD;&#xA;would be located inside &lt;code>TupleTypeClass&lt;/code>).&#xD;&#xA;The OCL Collection types for a particular element type can be retrieved with&#xD;&#xA;one of the corresponding, type-specific methods.&#xD;&#xA;&lt;/p>"/>
      </eAnnotations>
      <eOperations name="makeTupleType" eType="#//types/TupleType">
        <eParameters name="atts">
          <eGenericType eClassifier="ecore:EDataType ../../org.dresdenocl.pivotmodel/model/datatypes.ecore#//Sequence">
            <eTypeArguments eClassifier="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Property"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="getCollectionType" eType="#//types/CollectionType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p>&#xD;&#xA;Returns the {@link CollectionType} with the given element type. The&#xD;&#xA;given &lt;code>elementType&lt;/code> must not be &lt;code>null&lt;/code> or&#xD;&#xA;{@link #getOclInvalid() OclInvalid} (OCL 2.0 specification, Section 8.2.2).&#xD;&#xA;It may be {@link #getOclVoid() OclVoid}, though.&#xD;&#xA;&lt;/p>"/>
        </eAnnotations>
        <eParameters name="elementType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"/>
      </eOperations>
      <eOperations name="getSequenceType" eType="#//types/SequenceType">
        <eParameters name="elementType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"/>
      </eOperations>
      <eOperations name="getBagType" eType="#//types/BagType">
        <eParameters name="elementType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"/>
      </eOperations>
      <eOperations name="getSetType" eType="#//types/SetType">
        <eParameters name="elementType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"/>
      </eOperations>
      <eOperations name="getOrderedSetType" eType="#//types/OrderedSetType">
        <eParameters name="elementType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"/>
      </eOperations>
      <eOperations name="getTypeType" lowerBound="1" eType="#//types/TypeType">
        <eParameters name="representedType" lowerBound="1" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclBoolean" lowerBound="1"
          eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//PrimitiveType"
          containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclString" lowerBound="1"
          eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//PrimitiveType"
          containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclInteger" lowerBound="1"
          eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//PrimitiveType"
          containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclReal" lowerBound="1"
          eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//PrimitiveType"
          containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclAny" lowerBound="1"
          eType="#//types/AnyType" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclVoid" lowerBound="1"
          eType="#//types/VoidType" containment="true" resolveProxies="false" eOpposite="#//types/VoidType/oclLibrary"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclInvalid" lowerBound="1"
          eType="#//types/InvalidType" containment="true" resolveProxies="false" eOpposite="#//types/InvalidType/oclLibrary"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclType" lowerBound="1"
          eType="#//types/TypeType" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclCollection" lowerBound="1"
          eType="#//types/CollectionType" containment="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p>&#xD;&#xA;This is the prototype for the unlimited number of {@link CollectionType}s.&#xD;&#xA;Clients should not use this reference, but instead specify the desired&#xD;&#xA;element type of the collection using {@link #getCollectionType(Type)}.&#xD;&#xA;&lt;/p>"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclSequence" lowerBound="1"
          eType="#//types/SequenceType" containment="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p>&#xD;&#xA;This is the prototype for the unlimited number of {@link SequenceType}s.&#xD;&#xA;Clients should not use this reference, but instead specify the desired&#xD;&#xA;element type of the sequence using {link #getSequenceType(Type)}.&#xD;&#xA;&lt;/p>"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclBag" lowerBound="1"
          eType="#//types/BagType" containment="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p>&#xD;&#xA;This is the prototype for the unlimited number of {@link BagType}s.&#xD;&#xA;Clients should not use this reference, but instead specify the desired&#xD;&#xA;element type of the bag using {link #getBagType(Type)}.&#xD;&#xA;&lt;/p>"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclSet" lowerBound="1"
          eType="#//types/SetType" containment="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p>&#xD;&#xA;This is the prototype for the unlimited number of {@link SetType}s.&#xD;&#xA;Clients should not use this reference, but instead specify the desired&#xD;&#xA;element type of the set using {link #getSetType(Type)}.&#xD;&#xA;&lt;/p>"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclOrderedSet" lowerBound="1"
          eType="#//types/OrderedSetType" containment="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p>&#xD;&#xA;This is the prototype for the unlimited number of {@link OrderedSetType}s.&#xD;&#xA;Clients should not use this reference, but instead specify the desired&#xD;&#xA;element type of the ordered set using {link #getOrderedSetType(Type)}.&#xD;&#xA;&lt;/p>"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclTuple" lowerBound="1"
          upperBound="-1" eType="#//types/TupleType" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p>&#xD;&#xA;This is a reference list to {@link TupleType}s that are required to &#xD;&#xA;define the operations in the OCL Standard Library. Clients should&#xD;&#xA;not use the types in this list, but instead create their own tuple&#xD;&#xA;types using {@link #makeTupleType()}.&#xD;&#xA;&lt;/p>"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AnyType" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"/>
  </eSubpackages>
  <eSubpackages name="expressions" nsURI="http://www.omg.org/2006/essentialocl/expressions"
      nsPrefix="expressions">
    <eClassifiers xsi:type="ecore:EClass" name="VariableExp" eSuperTypes="#//expressions/OclExpression">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredVariable" eType="#//expressions/Variable"
          resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Variable" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//TypedElement ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//NamedElement">
      <eAnnotations source="rtt/annotation/node"/>
      <eOperations name="asParameter" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Parameter">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p>&#xD;&#xA;The OCL 2.0 specification defines an additional operation that returns a&#xD;&#xA;corresponding {@link Parameter} for a &lt;code>Variable&lt;/code>.&#xD;&#xA;&#xD;&#xA;It is specified as follows:&#xD;&#xA;&lt;pre>&#xD;&#xA;context Variable::asParameter() : Parameter&#xD;&#xA;post: result.name = self.name&#xD;&#xA;post: result.direction = ParameterDirectionKind::in&#xD;&#xA;post: result.type = self.type&#xD;&#xA;&lt;/pre>&#xD;&#xA;&lt;/p>"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="asProperty" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Property">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p>&#xD;&#xA;The OCL 2.0 Specification defines an additional operation that returns a&#xD;&#xA;corresponding {@link Property} for a &lt;code>Variable&lt;/code>.&#xD;&#xA;&#xD;&#xA;It is specified as follows:&#xD;&#xA;&lt;pre>&#xD;&#xA;context Variable::asProperty() : Attribute&#xD;&#xA;post: result.name= self.name&#xD;&#xA;post: result.type= self.type&#xD;&#xA;post: result.isMultiple = false&#xD;&#xA;post: result.isOrdered= true&#xD;&#xA;post: result.isStatic= false&#xD;&#xA;&lt;/pre>&#xD;&#xA;&#xD;&#xA;Note that the OCL specification adds an additional post condition:&#xD;&#xA;&#xD;&#xA;&lt;pre>&#xD;&#xA;post: result.constraint.specification.bodyExpression = self.initExpression&#xD;&#xA;&lt;/pre>&#xD;&#xA;&#xD;&#xA;However, the meta association between the Pivot Model elements&#xD;&#xA;{@link Constraint} and {@link ConstrainableElement} is only&#xD;&#xA;undirectional (in analogy to the specification in Core::Abstractions),&#xD;&#xA;so we cannot navigate from the property to one of its constraints.&#xD;&#xA;Also, this constraint is not really required because the&#xD;&#xA;&lt;code>asProperty()&lt;/code> operation is only used to&#xD;&#xA;determine the type of {@link TupleLiteralExpression}s. There. &#xD;&#xA;a conversion from &lt;code>Variable&lt;/code> to&#xD;&#xA;&lt;code>Property&lt;/code> is needed to make a corresponding&#xD;&#xA;&lt;code>TupleType&lt;/code>. Thus, setting the name and the&#xD;&#xA;type of the created &lt;code>Propery&lt;/code> is sufficient.&#xD;&#xA;&lt;/p>"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="representedParameter"
          eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Parameter"
          resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="initExpression" eType="#//expressions/OclExpression"
          containment="true" resolveProxies="false">
        <eAnnotations source="rtt/annotation/node/children"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="UnlimitedNaturalExp" eSuperTypes="#//expressions/NumericLiteralExp">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="symbol" eType="ecore:EDataType ../../org.dresdenocl.pivotmodel/model/datatypes.ecore#//UnlimitedNatural"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TypeLiteralExp" eSuperTypes="#//expressions/LiteralExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"
          resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TupleLiteralPart" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//TypedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="property" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Property"
          containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1"
          eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TupleLiteralExp" eSuperTypes="#//expressions/LiteralExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="part" upperBound="-1"
          eType="#//expressions/TupleLiteralPart" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="StringLiteralExp" eSuperTypes="#//expressions/PrimitiveLiteralExp">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="stringSymbol" eType="ecore:EDataType ../../org.dresdenocl.pivotmodel/model/datatypes.ecore#//String"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RealLiteralExp" eSuperTypes="#//expressions/NumericLiteralExp">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="realSymbol" eType="ecore:EDataType ../../org.dresdenocl.pivotmodel/model/datatypes.ecore#//Real"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PropertyCallExp" eSuperTypes="#//expressions/FeatureCallExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredProperty" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Property"
          resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="qualifier" upperBound="-1"
          eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PrimitiveLiteralExp" abstract="true"
        eSuperTypes="#//expressions/LiteralExp"/>
    <eClassifiers xsi:type="ecore:EClass" name="OperationCallExp" eSuperTypes="#//expressions/FeatureCallExp">
      <eAnnotations source="rtt/annotation/node"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="argument" upperBound="-1"
          eType="#//expressions/OclExpression" containment="true" resolveProxies="false">
        <eAnnotations source="rtt/annotation/node/children"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredOperation" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Operation"
          resolveProxies="false">
        <eAnnotations source="rtt/annotation/node/compare"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OclExpression" abstract="true" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//TypedElement ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//NamedElement">
      <eAnnotations source="rtt/annotation/node"/>
      <eOperations name="withAtPre" eType="#//expressions/OperationCallExp">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p>&#xD;&#xA;The OCL 2.0 specification defines an additional operation that returns&#xD;&#xA;an {@link OperationCallExp operation call expression} for the predefined&#xD;&#xA;&lt;code>atPre()&lt;/code> operation with the self expression as its source.&#xD;&#xA;&lt;/p>&#xD;&#xA;&#xD;&#xA;&lt;p>&#xD;&#xA;It is specified as follows:&#xD;&#xA;&#xD;&#xA;&lt;pre>&#xD;&#xA;context OclExpression::withAtPre() : OperationCallExp&#xD;&#xA;post: result.name = 'atPre'&#xD;&#xA;post: result.argument->isEmpty()&#xD;&#xA;post: result.source = self&#xD;&#xA;&lt;/pre>&#xD;&#xA;&#xD;&#xA;&lt;/p>"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="withAsSet" eType="#//expressions/OperationCallExp">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p>&#xD;&#xA;The OCL 2.0 specification defines an additional operation that returns&#xD;&#xA;an {@link OperationCallExp operation call expression} for the predefined&#xD;&#xA;&lt;code>asSet()&lt;/code> operation with the self expression as its source.&#xD;&#xA;&lt;/p>&#xD;&#xA;&#xD;&#xA;&lt;p>&#xD;&#xA;It is specified as follows:&#xD;&#xA;&#xD;&#xA;&lt;pre>&#xD;&#xA;context OclExpression::withAtPre() : OperationCallExp&#xD;&#xA;post: result.name = 'asSet'&#xD;&#xA;post: result.argument->isEmpty()&#xD;&#xA;post: result.source = self&#xD;&#xA;&lt;/pre>&#xD;&#xA;&#xD;&#xA;&lt;/p>"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclLibrary" eType="#//types/OclLibrary"
          resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="NumericLiteralExp" abstract="true"
        eSuperTypes="#//expressions/PrimitiveLiteralExp"/>
    <eClassifiers xsi:type="ecore:EClass" name="UndefinedLiteralExp" eSuperTypes="#//expressions/LiteralExp"/>
    <eClassifiers xsi:type="ecore:EClass" name="LoopExp" abstract="true" eSuperTypes="#//expressions/CallExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="body" lowerBound="1"
          eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="iterator" upperBound="-1"
          eType="#//expressions/Variable" containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="LiteralExp" abstract="true" eSuperTypes="#//expressions/OclExpression"/>
    <eClassifiers xsi:type="ecore:EClass" name="LetExp" eSuperTypes="#//expressions/OclExpression">
      <eStructuralFeatures xsi:type="ecore:EReference" name="in" lowerBound="1" eType="#//expressions/OclExpression"
          containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="variable" lowerBound="1"
          eType="#//expressions/Variable" containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IteratorExp" eSuperTypes="#//expressions/LoopExp"/>
    <eClassifiers xsi:type="ecore:EClass" name="IterateExp" eSuperTypes="#//expressions/LoopExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="result" eType="#//expressions/Variable"
          containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="InvalidLiteralExp" eSuperTypes="#//expressions/LiteralExp"/>
    <eClassifiers xsi:type="ecore:EClass" name="IntegerLiteralExp" eSuperTypes="#//expressions/NumericLiteralExp">
      <eAnnotations source="rtt/annotation/node"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="integerSymbol" eType="ecore:EDataType ../../org.dresdenocl.pivotmodel/model/datatypes.ecore#//Integer">
        <eAnnotations source="rtt/annotation/node/compare"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IfExp" eSuperTypes="#//expressions/OclExpression">
      <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1"
          eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="thenExpression" lowerBound="1"
          eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="elseExpression" lowerBound="1"
          eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="FeatureCallExp" abstract="true" eSuperTypes="#//expressions/CallExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="sourceType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p>&#xD;&#xA;The source type of a &lt;code>FeatureCallExp&lt;/code> is only required&#xD;&#xA;for static feature calls because these do not have an explicit source&#xD;&#xA;expression as defined by {@link CallExp}.&#xD;&#xA;&lt;/p>&#xD;&#xA;&#xD;&#xA;&lt;p>&#xD;&#xA;Actually, this attribute is currently only required for the static &lt;code>allInstances&lt;/code>&#xD;&#xA;operation because its return type &lt;code>Set(T)&lt;/code> depends&#xD;&#xA;on the type it is called on. For instance, &lt;code>MyClass::allInstances()&lt;/code>&#xD;&#xA;has the return type &lt;code>Set(MyClass)&lt;/code>. Since the corresponding&#xD;&#xA;generic operation from the OCL Standard Library needs to be bound to&#xD;&#xA;the source type, it must be available somewhere in the abstract syntax.&#xD;&#xA;&lt;/p>"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BooleanLiteralExp" eSuperTypes="#//expressions/PrimitiveLiteralExp">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="booleanSymbol" eType="ecore:EDataType ../../org.dresdenocl.pivotmodel/model/datatypes.ecore#//Boolean"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CallExp" abstract="true" eSuperTypes="#//expressions/OclExpression">
      <eStructuralFeatures xsi:type="ecore:EReference" name="source" eType="#//expressions/OclExpression"
          containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionItem" eSuperTypes="#//expressions/CollectionLiteralPart">
      <eStructuralFeatures xsi:type="ecore:EReference" name="item" lowerBound="1"
          eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="CollectionKind">
      <eLiterals name="Collection"/>
      <eLiterals name="Sequence" value="1"/>
      <eLiterals name="Bag" value="2"/>
      <eLiterals name="Set" value="3"/>
      <eLiterals name="OrderedSet" value="4"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionLiteralExp" eSuperTypes="#//expressions/LiteralExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="part" upperBound="-1"
          eType="#//expressions/CollectionLiteralPart" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" eType="#//expressions/CollectionKind"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="elementType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionLiteralPart" abstract="true"
        eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//TypedElement"/>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionRange" eSuperTypes="#//expressions/CollectionLiteralPart">
      <eStructuralFeatures xsi:type="ecore:EReference" name="first" lowerBound="1"
          eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="last" lowerBound="1"
          eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EnumLiteralExp" eSuperTypes="#//expressions/LiteralExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredEnumLiteral"
          eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//EnumerationLiteral"
          resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ExpressionInOcl" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Expression">
      <eAnnotations source="rtt/annotation/node"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="bodyExpression" lowerBound="1"
          eType="#//expressions/OclExpression" containment="true" resolveProxies="false">
        <eAnnotations source="rtt/annotation/node/children"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="context" eType="#//expressions/Variable"
          containment="true" resolveProxies="false">
        <eAnnotations source="rtt/annotation/node/children"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="result" eType="#//expressions/Variable"
          containment="true" resolveProxies="false">
        <eAnnotations source="rtt/annotation/node/children"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parameter" upperBound="-1"
          eType="#//expressions/Variable" containment="true" resolveProxies="false">
        <eAnnotations source="rtt/annotation/node/children"/>
      </eStructuralFeatures>
    </eClassifiers>
  </eSubpackages>
</ecore:EPackage>
