model	WhileCommand (cond,Expr,ref) (body,Commands,ref) 
model	ExprSimple (term,EString,attribute) (expression,EObject,ref) 
model	Vars (variables,EString,attribute) 
model	ForCommand (cond,Expr,ref) (body,Commands,ref) 
model	Definition (output,Output,ref) (intput,Input,ref) (body,Commands,ref) 
model	ExprSimpleWithLExpr (operation,EString,attribute) (lexpr,LExpr,ref) 
model	ExprNot (negation,EBoolean,attribute) (expressionEq,ExprEq,ref) 
model	ForeachCommand (expElement,EString,attribute) (expList,Expr,ref) (body,Commands,ref) 
model	ExprSimpleWithExpr (operation,EString,attribute) (expr,Expr,ref) 
model	ExprEq (exprRSimple,ExprSimple,ref) (expr,Expr,ref) (exprLSimple,ExprSimple,ref) 
model	ExprAnd (expressionsOr,ExprOr,ref) 
model	Function (functionName,EString,attribute) (functionDefinition,Definition,ref) 
model	LExpr (expressions,Expr,ref) 
model	Input (variables,EString,attribute) 
model	Expr (expression,EObject,ref) 
model	ExprOr (expressionsNot,ExprNot,ref) 
model	Output (variables,EString,attribute) 
model	IfCommand (thenBody,Commands,ref) (elseBody,Commands,ref) (cond,Expr,ref) 
model	Model (program,Function,ref) 
model	Commands (commands,Command,ref) 
model	VarsCommand (variables,Vars,ref) (values,Exprs,ref) 
model	Exprs (expressions,Expr,ref) 
model	ExprSimpleWithSymbolLExpr (symbol,EString,attribute) (lexpr,LExpr,ref) 
